// export const TOGGLE_VISIBLE_FILTERS = 'TOGGLE_VISIBLE_FILTERS';

// export function toggleVisibleFilters(target) {
//     return {
//         type: TOGGLE_VISIBLE_FILTERS,
//         payload: {
//             target
//         }
//     };
// }

export const SET_FILTER = 'SET_FILTER';

export function setFilter(filter, target) {
    return {
        type: SET_FILTER,
        payload: {
            filter, target
        }
    };
}

export const REMOVE_FILTER = 'REMOVE_FILTER';

export function removeFilter(filterName, target) {
    return {
        type: REMOVE_FILTER,
        payload: {
            filterName, target
        }
    };
}

export const REMOVE_ALL_FILTERS = 'REMOVE_ALL_FILTERS';

export function removeAllFilters(target) {
    return {
        type: REMOVE_ALL_FILTERS,
        payload: {
            target
        }
    };
}







import { createReducer } from 'utils';
import { TOGGLE_VISIBLE_FILTERS, SET_FILTER, REMOVE_FILTER, REMOVE_ALL_FILTERS } from 'actions/filters';

export default createReducer({
    [TOGGLE_VISIBLE_FILTERS](state, { target }) {
        return {
            ...state, [target]: {
                ...state[target], visible: !state[target].visible
            }
        };
    },

    [SET_FILTER](state, { filter, target }) {
        // return { ...state, [target]: { ...state[target], ...filter } };
        const nextState = {
            ...state, [target]: {
                ...state[target], list: { ...state[target].list, ...filter }
            }
        };

        console.log(nextState);

        return state;
    },

    // [REMOVE_FILTER](state, { filterName, target }) {
    //     const filters = state[target];
    //     delete filters[filterName];

    //     return { ...state, [target]: { ...filters } };
    // },

    // [REMOVE_ALL_FILTERS](state, { target }) {
    //     return { ...state, [target]: {} };
    // }
}, {
    // tickets: {}, statistics: {}
    tickets: {
        visible: false, list: {}
    },
    statistics: {
        visible: false, list: {}
    }
});